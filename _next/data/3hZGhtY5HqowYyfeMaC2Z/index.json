{"pageProps":{"allBlogs":[{"slug":"about-json","title":"About Json","description":"What is json and why it is useful for many rendering statergies and making some awesoeme web applications with the api handling services including many other services ? start reading from here - JSON grew out of a need for a stateless, real-time server-to-browser communication protocol without using browser plugins such as Flash or Java applets, the dominant methods used in the early 2000s.[11] A precursor to the JSON libraries was used in a children's digital asset trading game project named Cartoon Orbit at Communities.com (at which State Software's co-founders had all worked previously) for Cartoon Network, which used a browser-side plug-in with a proprietary messaging format to manipulate Dynamic HTML elements (this system is also owned by 3DO). Upon discovery of early Ajax capabilities, digiGroups, Noosh, and others used frames to pass information into the user browsers' visual field without refreshing a Web application's visual context, realizing real-time rich Web applications using only the standard HTTP, HTML, and JavaScript capabilities of Netscape 4.0.5+ and IE 5+.[citation needed] Crockford first specified and popularized the JSON format.[12] The State Software co-founders agreed to build a system that used standard browser capabilities and provided an abstraction layer for Web developers to create stateful Web applications that had a persistent duplex connection to a Web server by holding two Hypertext Transfer Protocol (HTTP) connections open and recycling them before standard browser time-outs if no further data were exchanged. The co-founders had a round-table discussion and voted whether to call the data format JSML (JavaScript Markup Language) or JSON (JavaScript Object Notation), as well as under what license type to make it available. Chip Morningstar developed the idea for the State Application Framework at State Software.[13][14] The system was sold to Sun Microsystems, Amazon.com, and EDS. The JSON.org[15] website was launched in 2002. In December 2005, Yahoo! began offering some of its Web services in JSON.[16] JSON was based on a subset of the JavaScript scripting language (specifically, Standard ECMA-262 3rd Edition—December 1999[17]) and is commonly used with JavaScript, but it is a language-independent data format. Code for parsing and generating JSON data is readily available in many programming languages. JSON's website lists JSON libraries by language. In October 2013, Ecma International published the first edition of its JSON standard ECMA-404.[8] That same year, RFC 7158 used ECMA-404 as a reference. In 2014, RFC 7159 became the main reference for JSON's Internet uses, superseding RFC 4627 and RFC 7158 (but preserving ECMA-262 and ECMA-404 as main references). In November 2017, ISO/IEC JTC 1/SC 22 published ISO/IEC 21778:2017[3] as an international standard. On 13 December 2017, the Internet Engineering Task Force obsoleted RFC 7159 when it published RFC 8259, which is the current version of the Internet Standard STD 90.[18][19] Crockford added a clause to the JSON license stating that The Software shall be used for Good, not Evil, in order to open-source the JSON libraries while mocking corporate lawyers and those who are overly pedantic. On the other hand, this clause led to license compatibility problems of the JSON license with other open-source licenses, as open-source software and free software usually imply no restrictions on the purpose of use.[20]","author":"Anshu Naagar"},{"title":"About C language","slug":"c-language","author":"Anshu","description":"C is a high-level and general-purpose programming language that is ideal for developing firmware or portable applications. Originally intended for writing system software, C was developed at Bell Labs by Dennis Ritchie for the Unix Operating System in the early 1970s. Ranked among the most widely used languages, C has a compiler for most computer systems and has influenced many popular languages – notably C++. Fixed number of keywords, including a set of control primitives, such as if, for, while, switch and do while Multiple logical and mathematical operators, including bit manipulators Multiple assignments may be applied in a single statement. Function return values are not always required and may be ignored if unneeded. Typing is static. All data has type but may be implicitly converted. Basic form of modularity, as files may be separately compiled and linked Control of function and object visibility to other files via extern and static attributes"},{"title":"Learn javascript","slug":"javascript","author":"Mozilla Firefox MDN","description":"JavaScript (often shortened to JS) is a lightweight, interpreted, object-oriented language with first-class functions, and is best known as the scripting language for Web pages, but it's used in many non-browser environments as well. It is a prototype-based, multi-paradigm scripting language that is dynamic, and supports object-oriented, imperative, and functional programming styles. JavaScript runs on the client side of the web, which can be used to design / program how the web pages behave on the occurrence of an event. JavaScript is an easy to learn and also powerful scripting language, widely used for controlling web page behavior. Contrary to popular misconception, JavaScript is not Interpreted Java. In a nutshell, JavaScript is a dynamic scripting language supporting prototype based object construction. The basic syntax is intentionally similar to both Java and C++ to reduce the number of new concepts required to learn the language. Language constructs, such as if statements, for and while loops, and switch and try ... catch blocks function the same as in these languages (or nearly so). JavaScript can function as both a procedural and an object oriented language. Objects are created programmatically in JavaScript, by attaching methods and properties to otherwise empty objects at run time, as opposed to the syntactic class definitions common in compiled languages like C++ and Java. Once an object has been constructed it can be used as a blueprint (or prototype) for creating similar objects. JavaScript's dynamic capabilities include runtime object construction, variable parameter lists, function variables, dynamic script creation (via eval), object introspection (via for ... in), and source code recovery (JavaScript programs can decompile function bodies back into their source text). For a more in depth discussion of JavaScript programming follow the JavaScript resources links below."}]},"__N_SSG":true}